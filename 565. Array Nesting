class Solution {
public:
    int DFS(vector<bool>& visited, vector<int>& nums, int first)
    {
        int loc = first; 
        int ct =0; 
        while(1)
        {
            visited[loc] = 1; 
            loc = nums[loc];
            ct++; 
            
            if(loc == first) return ct; 

            
        }
        return 0; //dummy        
    }
    int arrayNesting(vector<int>& nums) {
        int n  = nums.size(); 
        if(n<1) return 0; 
        
        vector<bool> visited(n,0); 
        
        int ret = 0; 
        for(int i =0; i< n; i++)
        {
            if(visited[i] ==0)
            {
                int l = DFS(visited, nums, i);
                ret = max(ret, l);
            }
        }
        
        return ret; 
    }
};
