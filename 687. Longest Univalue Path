

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
#define MAX(a,b) (((a)>(b))?(a):(b))
class Solution {
public:
    int maxval =0; 
    
    int DFS(TreeNode* root) {

         if(!root) return 0; 
        int l = DFS(root->left);
        int r = DFS(root->right);
        
        bool leftMatch = false; 
        bool rightMatch = false; 
        
        if(root->left)
            if(root->left->val == root->val) leftMatch = true; 
        
        if(root->right)
            if(root->right->val == root->val) rightMatch =true; 
        
        if(leftMatch && rightMatch)
        {
                maxval = MAX(maxval, (l+r+2));
                return (MAX(l,r)+1);
        }

        if(leftMatch && !rightMatch)
            {
                maxval = MAX(maxval, (l+1));
                return (l+1);
            }
        if(rightMatch && !leftMatch)
            {
                maxval = MAX(maxval, (r+1));
                return (r+1);
            }
                
        return 0; 
    }
    
    
    int longestUnivaluePath(TreeNode* root) {
        
        DFS(root);
        return maxval;
        
    }
};
