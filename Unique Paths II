class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int n = obstacleGrid.size();
        int m = obstacleGrid[0].size();
        if((m <0 )|| (n<0)) return 0; 
        
        vector<int> path(m,0);
        
        int count = 0 ; 
        for(int i = 0  ; i< m; i++)
        {
            count += obstacleGrid[0][i];
            path[i] = (int)(count==0);
        }
        
        for(int j = 1  ; j< n; j++)
        {
            
            path[0] = (!obstacleGrid[j][0])&path[0];
           for(int i = 1  ; i< m; i++)
            {
                if(obstacleGrid[j][i] == 1) 
                path[i] = 0; 
                else
                path[i] =  path[i]+path[i-1];
            }
        }
        
        return path[m-1];
        
    }
};
