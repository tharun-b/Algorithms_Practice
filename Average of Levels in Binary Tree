/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    
    void DFS(TreeNode *root, int level, vector<double> &sum, vector<int> &count)
    {
        if(!root) return; 
        if(sum.size() > level)
        {
            sum[level]+= root->val; 
            count[level]++;  
        }
        else
        {
             sum.push_back(root->val);
             count.push_back(1);
        }
        if(root->left)  DFS(root->left,level+1,sum,count );
        if(root->right) DFS(root->right,level+1,sum,count );
        
    }
    vector<double> averageOfLevels(TreeNode* root) {
        
        vector<double> sum; 
        vector<int> levels; 
        int level =0 ; 
        
        DFS(root, level,sum, levels);
            
            for(int i =0; i<sum.size(); i++)
            {
                sum[i] /= levels[i]; 
            }
        
        return sum; 
        
    }
};
