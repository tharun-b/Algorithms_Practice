/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
bool compare(Interval a, Interval b)
{
    return (a.start < b.start);
}

class Solution {
public:
    
    bool canAttendMeetings(vector<Interval>& intervals) {
        int n = intervals.size(); 
        if(n< 2) return true; 
        
        sort(intervals.begin(), intervals.end(), compare);
        
        for(int i =1; i < n; i++)
        {
            Interval cur = intervals[i];
            
            //cout<<"prev.start  = "<<prev.start<<"\t"; 
            
            if(intervals[i-1].start == intervals[i].start) return false; 
            if(intervals[i-1].end > intervals[i].start) return false;   
        }
        
        return true; 
    }
};
