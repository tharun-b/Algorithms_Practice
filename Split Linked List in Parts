/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* root, int k) {
        ListNode *ptr = root; 
        int n =0; 
        while(ptr)
        {
            n++; 
            ptr= ptr->next; 
        }
        
        vector<ListNode*> result; 
        
        int b = n/k;
        int r = n%k;
        int kd = k; 
        ptr = root; 
        int count = b +(r>0); 
        r--; 
        result.push_back(root);
        ListNode *prev = root; 
        while(ptr)
        {
              if(count>0)
              {
                count--;   
              }
            else
            {
                count = b +(r>0)-1;
                prev->next = 0; 
                result.push_back(ptr);
                r--; 
                kd--; 
            }
            prev = ptr; 
            ptr= ptr->next; 
        }
        if(kd>0)
        {
            while(kd>1)
            {
                result.push_back(0);
                kd--;
            }
        }
        
        return result; 
        
    }
};
