/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == NULL) return 0; 
        queue<pair<TreeNode *,int>> que;  
        que.push(make_pair(root,1));
        int ret =1; 
        while(!que.empty())
        {
            auto cur_node = que.front();
            que.pop(); 
            TreeNode* ptr = cur_node.first; 
            ret = cur_node.second; 
            if(ptr->left) 
            {
                que.push(make_pair(ptr->left,cur_node.second+1));
            }
            if(ptr->right) 
            {
                que.push(make_pair(ptr->right,cur_node.second+1));
            }
        }
        return ret; 
    }
};
