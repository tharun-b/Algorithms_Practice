class Solution {
public:
    bool buddyStrings(string A, string B) {
        
        if(A.size() != B.size()) return false; 
        int ct =0; 
        
        vector<int> look(26,0); 
        vector<int> left; 
        vector<int> right; 

        for(int i=0; i< A.size(); i++)
        {
            if(A[i] != B[i])
            {
                ct++; 
                left.push_back(A[i]-'a');
                right.push_back(B[i]-'a');
            }
            
            look[A[i]-'a']++; 
            
        }
        
        if((ct!=2) && (ct !=0)) return false; 
        
        if(ct==2)
        {
            if((min(left[0], left[1]) == min(right[0], right[1])) && 
               (max(left[0], left[1]) == max(right[0], right[1])))
                return true;
            
            return false; 
            
        }
        
        if(ct==0)
        {
            for(int i =0; i< 26; i++)
            {
                if(look[i] > 1) return true; 
            }
        }
        
        return false; 
        
    }
};
