class Solution {
public:
//     vector<int> sol; 
//     int mct =0; 
    
    
//    void permute(vector<int>& A, vector<int>& B, int i)
//     {
//         if(i == A.size())
//         {
//             int ct =0; 
//             // cout<<"\n"; 
//             for(int k=0; k< A.size(); k++)
//             {
//                 // cout<<A[k]<<",";
//                 ct += (A[k]>B[k]);
//             }
            
//             if(ct > mct) 
//             {
//                 // cout<<"\t"<<ct<<"\t"<<mct<<endl; 
//                 mct = ct; 
//                 sol = A; 
//             }
            
//         }
//         else
//         {
//             for(int j=i; j< A.size(); j++)
//             {
//                 swap(A[i], A[j]);
//                     permute(A,B, i+1);
//                 swap(A[j],A[i]);
//             }
            
//         }
        
        
//     }
    vector<int> advantageCount(vector<int>& A, vector<int>& B) {
        
        // sol = A; 

        
        vector<int> ans; 
        
        multiset<int> hash; 
        for(int i =0; i< A.size(); i++)
        {
            hash.insert(A[i]); 
        }
        
        for(int i =0 ; i< B.size(); i++)
        {
            
           auto itr =  hash.upper_bound(B[i]);
            
            if(itr== hash.end()) itr = hash.begin(); 
            
                cout<<*itr<<",";
                ans.push_back(*itr);
                hash.erase(itr);             
        }
        
        return ans; 
        
    }
};
