class Solution {
public:
    
    int numDecodings(string s) {
        
        int n(s.size());
        if(n<1) return 0; 
        //fn = f(n-1)  + (f(n-2) * cond)
        int prev = s[n-1]-'0';

        int fi_2 = 1;  
        int fi_1 = (prev != 0); 
        
        if(n<2) return (prev != 0);

        for(int i = n-2; i >= 0; i--)
        {
            int cur = s[i]-'0';
            int tot = (prev + cur*10); 
            
            bool isvalid = (((tot<27) && (tot>0)));
            
            if((isvalid == 0) && (prev == 0)) return 0; 
            
            int best= (fi_1 * (prev!=0) ) + (isvalid * fi_2);
            
            fi_2 = fi_1; 
            fi_1 = best; 
            
            if(cur == 0) fi_1 = 0;
            if((isvalid ==1) && (prev ==0)) fi_2 =0; 
            
            prev = cur;                         
        }
        
        return fi_1; 
        
    }
};


/*

1
12 - 2 

123

0 1 2 3 4
1 2 1 2 7 1 

0121307

1 2 , 12 
1 2 1 , 12 1 , 1 21
1 2 1 3, 12 1 3, 12 13 , 1 21 3 

- what happens to zeroes
 - 
fn = f(n-1)  + (f(n-2) * cond)

*/
