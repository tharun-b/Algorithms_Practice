class Solution {
public:
    int maxIncreaseKeepingSkyline(vector<vector<int>>& grid) {
        int n = grid.size(); 
        if(n<1) return 0; 
        int m = grid[0].size(); 
        
        
        vector<int> col(m,0); 
        vector<int> row(n,0); 
        
        for(int i =0; i< m; i++)
        {
            int ma =0; 
            
            for(int j= 0 ; j<n; j++)
            {
                ma = max(ma,grid[j][i]);
            }
            
            col[i] = ma; 
        }
        
        for(int i =0; i< n; i++)
        {
            int ma =0; 
            
            for(int j= 0 ; j<m; j++)
            {
                ma = max(ma,grid[i][j]);
            }
            
            row[i] = ma; 
        }
        
        int tot =0; 
        for(int i =0; i< n; i++)
        {
            for(int j= 0 ; j<m; j++)
            {

              int diff1 =  abs(row[i] - grid[i][j]);
                  
              int diff2 = abs(col[j] - grid[i][j]); 
                
                tot += min(diff1, diff2); 
            }
        }
        return tot; 
        
        
    }
};
